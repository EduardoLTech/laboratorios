1. Instalando Docker
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io
sudo usermod -aG docker ubuntu

########### Sair da instancia e entrar novamente.


2. Subindo seu primeiro Container com imagem do DockerHub
docker run hello-world
docker run -d -p 8080:80 nginx

3. Exemplos de comandos

docker ps - 
docker run --name -d -v -e -p
docker stop
docker rm -f
docker images
docker rmi
docker exec -it
docker logs

docker rm if $(docker ps -a -q)  #apaga tudo


# Subir um container do NGINX que serÃ¡ mapeado a porta 8080 da sua maquina para a porta 80 do container
docker run -d -p 8080:80 nginx

# Usando o parametro --name para definir o nome do container
docker run -p 8080:80 --name webserver nginx

# Remover um container forÃ§ando sua parada
docker rm -f webserver

# Rodar um comando em um container jÃ¡ em execuÃ§Ã£o
docker run -it -p 8080:80 --name webserver nginx

# Mapear uma pasta para dentro do seu container
docker run -d -v "$(pwd):/usr/share/nginx/html" -p 8080:80 --name webserver nginx


########## Principais parametro para criar uma imagem ###############

    - Dockerfile - Entendendo sua sintaxe
    - Dockerfile - InstruÃ§Ã£o FROM nginx  # Indica a imagem base a ser utilizada a mesma serÃ¡ baixada do Docker Hub.
    - Dockerfile - InstruÃ§Ã£o LABEL # Utilizado para passar comentÃ¡rios dentro do dockerfile como o dono do dockerfile por exemplo. 
    - Dockerfile - InstruÃ§Ã£o RUN apt-get update && apt-get upgrade # Executa um comando na construÃ§Ã£o da imagem
    - Dockerfile - InstruÃ§Ã£o WORKDIR /usr/share/nginx # Define o diretÃ³rio inicial do seu container.
    - Dockerfile - InstruÃ§Ã£o COPY ./site:/usr/share/nginx # Copia o conteudo da pasta site que estÃ¡ local para dentro do container no caminho especificado.
    - Dockerfile - InstruÃ§Ã£o ADD ./site:/usr/share/nginx # Adiciona o conteudo da pasta site que estÃ¡ local para dentro do container no caminho especificado.
    - Dockerfile - InstruÃ§Ã£o ENV HOST_DB=MYSQLDB # Passa variaveis para a imagem
    - Dockerfile - InstruÃ§Ã£o ENTRYPOINT nginx & CMD # Defini o comando a ser executado no inicio do container.
    - Dockerfile - InstruÃ§Ã£o USER nginx # Define o usuÃ¡rio a ser utilizado nos comandos posteriores a este.
    - Dockerfile - InstruÃ§Ã£o EXPOSE 80 # Deixa explicito ao usuÃ¡rio final que estÃ¡ porta precisa ser publicada para poder funcionar.
    - Dockerfile - InstruÃ§Ã£o VOLUME # Mapeamento de pastas ou volumes para o container

################ Docker hub #####################
docker tag local-image:tagname new-repo:tagname
docker push new-repo:tagname

###############################################

sudo apt-get install zip
wget http://pages.cloudtreinamentos.com/aws/arquivos/aplicacao_python.zip
sudo unzip aplicacao_python.zip

docker build -t app-python .
docker run -d -p 8080:8080 app-python


####################### Instal Composer

sudo curl -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
docker-compose --version


########### Link para o arquivo dockeer compose

wget http://pages.cloudtreinamentos.com/aws/arquivos/docker-compose.yml

docker-compose up -d

############# Laboratorio Swarm


http://pages.cloudtreinamentos.com/aws/arquivos/Laboratorio_swarm.zip

docker stack deploy -c docker-compose.yml app

docker service ls
docker service ps SERVICE_ID

# Inicializa um cluster
docker swarm init

